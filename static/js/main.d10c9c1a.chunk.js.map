{"version":3,"sources":["utils/theme.js","contexts/ThemeContext.js","scenes/Global.js","scenes/History.js","scenes/Country.js","scenes/Footer.js","scenes/Dashboard.js","utils/virusIcon.js","scenes/Header.js","scenes/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["themeLight","background","body","themeDark","theme","mode","ThemeContext","React","createContext","dark","toggle","useTheme","useContext","ThemeProvider","children","useState","hasThemeLoaded","themeState","setThemeState","useEffect","IsDark","localStorage","getItem","useEffectDarkMode","computedTheme","Provider","value","setItem","JSON","stringify","Global","stats","setStats","loading","setLoading","fetch","then","response","a","json","res","catch","err","console","log","Card","styled","className","type","color","height","width","cases","total","active","recovered","deaths","History","selectedCountry","history","setHistory","data","style","maxWidth","margin","top","right","left","bottom","dataKey","reversed","tickFormatter","Date","toLocaleDateString","strokeDasharray","labelFormatter","toLocaleString","labelStyle","dot","name","stroke","activeDot","r","Country","countries","setCountries","country","setCountry","isLoading","setIsLoading","Promise","all","allCountires","handleCountryChange","e","target","spinner","text","length","htmlFor","id","onChange","map","key","tests","critical","Footer","Component","pStyle","fontSize","Align","alignItems","justifyContent","Dashboard","Icon","xmlns","viewBox","fill","transition","WebkitTextIndent","textIndent","WebkitTextAlign","textAlign","lineHeight","WebkitTextTransform","textTransform","blockProgression","InkscapeFontSpecification","d","Header","backgroundColor","title","onClick","size","Wrapper","props","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d10c9c1a.chunk.js","sourcesContent":["const white = '#FFFFFF';\nconst black = '#161617';\nconst gray = '#F8F8F9';\n\nconst themeLight = {\n    background: gray,\n    body: black\n};\n\nconst themeDark = {\n    background: black,\n    body: white\n};\n\nconst theme = mode => (mode === 'dark' ? themeDark : themeLight);\n\nexport default theme;","import React from 'react';\nimport { ThemeProvider as EmotionThemeProvider } from 'emotion-theming';\nimport theme from '../utils/theme';\n\nconst defaultContextData = {\n    dark: false,\n    toggle: () => {}\n};\n\nconst ThemeContext = React.createContext(defaultContextData);\nconst useTheme = () => React.useContext(ThemeContext);\n\nconst useEffectDarkMode = () => {\n    const [themeState, setThemeState] = React.useState({\n        dark: false,\n        hasThemeLoaded: false\n    });\n    React.useEffect(() => {\n        const IsDark = localStorage.getItem('dark') === 'true';\n        setThemeState({ ...themeState, dark: IsDark, hasThemeLoaded: true });\n    }, []);\n\n    return [themeState, setThemeState];\n};\n\nconst ThemeProvider = ({ children }) => {\n    const [themeState, setThemeState] = useEffectDarkMode();\n\n    if (!themeState.hasThemeLoaded) {\n        // If the theme is not yet loaded we don't want to render\n        // this is just a workaround to avoid having the app rendering\n        // in light mode by default and then switch to dark mode \n        // while getting the theme state from localStorage\n        return <div />;\n    }\n\n    const toggle = () => {\n        // toggle function code goes here\n        const dark = !themeState.dark;\n        localStorage.setItem('dark', JSON.stringify(dark));\n        setThemeState({ ...themeState, dark });\n    };\n\n    const computedTheme = themeState.dark ? theme('dark') : theme('light');\n\n    return (\n        <EmotionThemeProvider theme={computedTheme}>\n            <ThemeContext.Provider\n                value={{\n                    dark: themeState.dark,\n                    toggle\n                }}\n            >\n                {children}\n            </ThemeContext.Provider>\n        </EmotionThemeProvider>\n    );\n};\n\nexport { ThemeProvider, useTheme };","import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport styled from '@emotion/styled';\n\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst Global = () => {\n    const themeState = useTheme();\n    const [stats, setStats] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch('https://covid-193.p.rapidapi.com/statistics?country=All', {\n            'method': 'GET',\n            'headers': {\n                'x-rapidapi-host': \"covid-193.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"6e5e4a470fmsh2cb76a891d5004ep14da9ejsn8a5f9975df86\"\n            }\n        })\n            .then(async response => {\n                const res = await response.json();\n                setStats(res.response);\n                setLoading(false);\n            })\n            .catch(err => {\n                setLoading(false);\n                console.log(err);\n            });\n    }, []);\n    \n    const Card = styled('div')`\n        &:hover {\n            box-shadow: ${themeState.dark ?\n            '0px 0px 25px 1px rgba(255, 255, 255, 0.75)'\n            : '0px 0px 25px 1px rgba(0, 0, 0, 0.75)'\n        }\n        }\n    `;\n\n    if (loading) {\n        return (\n            <div className='d-flex justify-content-center w-100'>\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\n            </div>\n        )\n    }\n    return (\n        <div className=\"row display-flex\">\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\n                <Card className=\"card h-100 bg-tiber\">\n                    <div className=\"card-body text-center\">\n                        <h5 className=\"card-title\">Total Cases</h5>\n                        <p className='stat-number'>{stats[0].cases.total}</p>\n                    </div>\n                </Card>\n            </div>\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\n                <Card className=\"card h-100 bg-green\">\n                    <div className=\"card-body text-center\">\n                        <h5 className=\"card-title\">Active Cases</h5>\n                        <p className='stat-number'>{stats[0].cases.active}</p>\n                    </div>\n                </Card>\n            </div>\n            <div className=\"col col-12 col-sm-3 mb-3 mb-sm-0\">\n                <Card className=\"card h-100 bg-astral\">\n                    <div className=\"card-body text-center\">\n                        <h5 className=\"card-title\">Recovered Cases</h5>\n                        <p className='stat-number'>{stats[0].cases.recovered}</p>\n                    </div>\n                </Card>\n            </div>\n            <div className=\"col col-12 col-sm-3\">\n                <Card className=\"card h-100 bg-red\">\n                    <div className=\"card-body text-center\">\n                        <h5 className=\"card-title\">Total Deaths</h5>\n                        <p className='stat-number'>{stats[0].deaths.total}</p>\n                    </div>\n                </Card>\n            </div>\n        </div>\n    )\n};\n\nexport default Global;","import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport { LineChart, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Line, ResponsiveContainer } from 'recharts';\n\nconst History = ({ selectedCountry }) => {\n    const [history, setHistory] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        if (selectedCountry) {\n            fetch(`https://covid-193.p.rapidapi.com/history?country=${selectedCountry}`, {\n                'method': 'GET',\n                'headers': {\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\n                }\n            }).then(async data => {\n                const stats = await data.json();\n                setHistory(stats.response);\n                setLoading(false);\n            }).catch(err => {\n                setLoading(false);\n                console.log(err);\n            });\n        } else {\n            fetch('https://covid-193.p.rapidapi.com/history?country=All', {\n                'method': 'GET',\n                'headers': {\n                    'x-rapidapi-host': 'covid-193.p.rapidapi.com',\n                    'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\n                }\n            }).then(async data => {\n                const stats = await data.json();\n                setHistory(stats.response);\n                setLoading(false);\n            }).catch(err => {\n                setLoading(false);\n                console.log(err);\n            });\n        }\n    }, [selectedCountry]);\n\n    if (loading) {\n        return (\n            <div className='d-flex justify-content-center w-100'>\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\n            </div>\n        )\n    }\n\n    return (\n        <div className={`d-flex justify-content-center ${selectedCountry ? 'flex-column' : ''}`}>\n            {\n                selectedCountry ?\n                    <div className='d-flex justify-content-center'>\n                        <h3>History ({selectedCountry})</h3>\n                    </div>\n                    :\n                    null\n            }\n            <div style={{ width: '100%', maxWidth: '600px', height: '300px' }}>\n                <ResponsiveContainer>\n                    <LineChart\n                        data={history}\n                        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                    >\n                        <XAxis\n                            dataKey='time'\n                            reversed\n                            tickFormatter={value => {\n                                return new Date(value).toLocaleDateString();\n                            }}\n                        />\n                        <YAxis dataKey='cases.active' />\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <Tooltip \n                            labelFormatter={value => {\n                                return new Date(value).toLocaleString();\n                            }}\n                            labelStyle={{\n                                color: '#000000'\n                            }}\n                        />\n                        <Legend />\n                        <Line type=\"monotone\" dot={false} name='Total Cases' dataKey=\"cases.total\" stroke=\"#052D3D\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dot={false} name='Active Cases' dataKey=\"cases.active\" stroke=\"#B2D732\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dot={false} name='Recovered Cases' dataKey=\"cases.recovered\" stroke=\"#347B98\" activeDot={{ r: 8 }} />\n                        <Line type=\"monotone\" dot={false} name='Total Deaths' dataKey=\"deaths.total\" stroke=\"#FE2712\" activeDot={{ r: 8 }} />\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default History;","import React, { useState, useEffect } from 'react';\nimport ReactLoading from 'react-loading';\nimport LoadingOverlay from 'react-loading-overlay';\nimport styled from '@emotion/styled';\n\nimport { useTheme } from '../contexts/ThemeContext';\n\nimport History from './History';\n\nconst Country = () => {\n    const themeState = useTheme();\n    const [countries, setCountries] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [country, setCountry] = useState('Tunisia');\n    const [stats, setStats] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        Promise.all([\n            fetch('https://covid-193.p.rapidapi.com/countries', {\n                'method': 'GET',\n                'headers': {\n                    'x-rapidapi-host': \"covid-193.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"6e5e4a470fmsh2cb76a891d5004ep14da9ejsn8a5f9975df86\"\n                }\n            }),\n            fetch(`https://covid-193.p.rapidapi.com/statistics?country=${country}`, {\n                'method': 'GET',\n                'headers': {\n                    'x-rapidapi-host': \"covid-193.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"6e5e4a470fmsh2cb76a891d5004ep14da9ejsn8a5f9975df86\"\n                }\n            })\n        ]).then(async ([allCountires, data]) => {\n            const countries = await allCountires.json();\n            const stats = await data.json();\n            setCountries(countries.response);\n            setStats(stats.response);\n            setLoading(false);\n        }).catch(err => {\n            setLoading(false);\n            console.log(err);\n        });\n    }, [])\n\n    const handleCountryChange = e => {\n        setIsLoading(true);\n        setCountry(e.target.value);\n        fetch(`https://covid-193.p.rapidapi.com/statistics?country=${e.target.value}`, {\n            'method': 'GET',\n            'headers': {\n                'x-rapidapi-host': 'covid-193.p.rapidapi.com',\n                'x-rapidapi-key': 'c3d6f57617mshf51e3d34956c4bdp15121ajsna81b7d225018'\n            }\n        }).then(async data => {\n            const stats = await data.json();\n            setStats(stats.response);\n            setIsLoading(false);\n        }).catch(err => {\n            setIsLoading(false);\n            console.log(err);\n        });\n    }\n\n    const renderSelectBox = () => {\n        if (countries.length !== 0) {\n            \n            return (\n                <form className='w-100'>\n                    <div className='form-group row justify-content-center d-flex'>\n                        <label htmlFor='country' className='d-flex justify-content-center col-lg-6 col-sm-4 col-form-label col-md-6'><strong>Choose a Country</strong></label>\n                        <div className='d-flex justify-content-center col-sm-8 col-lg-6 col-md-6'>\n                            <select id='country' className='country-select' value={country} onChange={handleCountryChange}>\n                                {countries.map(country => <option key={country} value={country}>{country}</option>)}\n                            </select>\n                        </div>\n                    </div>\n                </form>\n            )\n        }\n\n        return null;\n    };\n\n    const Card = styled('div')`\n        &:hover {\n            box-shadow: ${themeState.dark ?\n            '0px 0px 25px 1px rgba(255, 255, 255, 0.75)'\n            : '0px 0px 25px 1px rgba(0, 0, 0, 0.75)'\n        }\n        }\n    `;\n\n    if (loading) {\n        return (\n            <div className='d-flex justify-content-center w-100'>\n                <ReactLoading type='spinningBubbles' color='#347B98' height={'10%'} width={'10%'} />\n            </div>\n        )\n    }\n\n    return (\n        <LoadingOverlay\n            spinner\n            active={isLoading}\n            text='Please wait...'\n        >\n            <div className='row display-flex'>\n                <div className='col-12 mb-2'>\n                    <div className='d-flex justify-content-center w-100 m-2'>\n                        {renderSelectBox()}\n                    </div>\n                </div>\n                <div className='col-12 col-lg-6 col-sm-12'>\n                    <div className='row'>\n\n\n                        <div className=\"col-12 col-sm-6 mb-3\">\n                            <Card className=\"card h-100 bg-green\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Total Tests</h5>\n                                    <p className='stat-number'>{stats[0].tests.total}</p>\n                                </div>\n                            </Card>\n                        </div>\n\n                        <div className=\"col-12 col-sm-6 mb-3 mb-sm-4\">\n                            <Card className=\"card h-100 bg-tiber\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Total Cases</h5>\n                                    <p className='stat-number'>{stats[0].cases.total}</p>\n                                </div>\n                            </Card>\n                        </div>\n\n                        {/* <div className=\"card text-white bg-secondary mb-3\" >\n                            <div className=\"card-header\" >Header</div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Secondary card title</h5>\n                                <div className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</div>\n                            </div>\n                        </div>\n\n                        <div className=\"card text-white bg-primary mb-3\" >\n                            <div className=\"card-header\" ><h3>Cases</h3></div>\n                            <div className=\"card-body\">\n                                <h5 className=\"card-title\">Total Cases : {stats[0].cases.total}</h5>\n                                <h5 className=\"card-title\">Recovered Cases : {stats[0].cases.recovered}</h5>\n                                <h5 className=\"card-title\">Critical Cases : {stats[0].cases.critical}</h5>\n                            </div>\n                        </div> */}\n                        \n                        \n\n\n\n\n                        \n\n\n\n\n\n\n\n\n                    </div>\n                    <div className='row'>\n                        <div className=\"col-12 col-sm-6 mb-3 mb-sm-4\">\n                            <Card className=\"card h-100 bg-green\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Active Cases</h5>\n                                    <p className='stat-number'>{stats[0].cases.active}</p>\n                                </div>\n                            </Card>\n                        </div>\n                   \n                    \n                        <div className=\"col-12 col-sm-6 mb-3\">\n                            <Card className=\"card h-100 bg-astral\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Recovered Cases</h5>\n                                    <p className='stat-number'>{stats[0].cases.recovered}</p>\n                                </div>\n                            </Card>\n                        </div>\n                        </div>\n                        <div className='row'>\n                        \n\n                        <div className=\"col-12 col-sm-6 mb-3\">\n                            <Card className=\"card h-100 bg-astral\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Critical Cases</h5>\n                                    <p className='stat-number'>{stats[0].cases.critical}</p>\n                                </div>\n                            </Card>\n                        </div>\n\n                        <div className=\"col-12 col-sm-6 mb-3\">\n                            <Card className=\"card h-100 bg-red\">\n                                <div className=\"card-body text-center\">\n                                    <h5 className=\"card-title\">Total Deaths</h5>\n                                    <p className='stat-number'>{stats[0].deaths.total}</p>\n                                </div>\n                            </Card>\n                        </div>\n\n                        \n\n                    </div>\n                </div>\n                <div className='col-12 col-lg-6 col-sm-12'>\n                    <History selectedCountry={country} />\n                </div>\n            </div>\n        </LoadingOverlay>\n    );\n};\n\nexport default Country;","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n                <h6>Created by Hichem Klouz © 2020</h6>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\n\nimport Global from './Global';\nimport Country from './Country';\nimport History from './History';\nimport Footer from './Footer';\n\nconst pStyle = {\n    fontSize: '150px',\n    Align: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color:'red',\n    \n  };\n\nconst Dashboard = () => {\n    return (\n        <div className='container mt-2'>\n\n            <div className='row'>\n                <div className='col-12 mb-2'>\n                    <h5 className='text-left'>Country Wise Stats</h5>\n                    <hr />\n                </div>\n                <div className='col-12'>\n                    <Country />\n                </div>\n            </div>\n            <div className='row mb-3 mt-3'>\n                <div className='col-12'>\n                    <h5 className='text-left'>History (Global)</h5>\n                    <hr />\n                </div>\n                <div className='col-12'>\n                    <History />\n                </div>\n            </div>\n            <div className='row mb-3'>\n                <div className='col-12 mb-2'>\n                    <h5 className='text-left'>Global Stats</h5>\n                    <hr />\n                </div>\n                <div className='col-12'>\n                    <Global />\n                </div>\n            </div>\n            \n            \n                    <div  className='row mb-3 mt-3' style={pStyle}>\n                        <Footer />\n                    </div>\n            \n            </div>\n        \n    )\n};\n\nexport default Dashboard;","import React from \"react\";\n\nfunction Icon({ color }) {\n  return (\n    <svg \n        height='30px' \n        width='30px' \n        xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"\n        style={{ fill: color, transition: '0.5s' }}\n    >\n      <path\n        style={{\n          WebkitTextIndent: \"0\",\n          textIndent: \"0\",\n          WebkitTextAlign: \"start\",\n          textAlign: \"start\",\n          lineHeight: \"normal\",\n          WebkitTextTransform: \"none\",\n          textTransform: \"none\",\n          blockProgression: \"tb\",\n          InkscapeFontSpecification: \"Bitstream Vera Sans\"\n        }}\n        d=\"M14 3v2h1v1.063A9.87 9.87 0 009.687 8.25l-.75-.75.688-.688-1.406-1.406L5.406 8.22l1.407 1.406.687-.688.75.75A9.87 9.87 0 006.062 15H5v-1H3v4h2v-1h1.063a9.864 9.864 0 002.218 5.344l-.781.718-.688-.687-1.406 1.406 2.813 2.813 1.406-1.407-.688-.687.75-.781A9.846 9.846 0 0015 25.937V27h-1v2h4v-2h-1v-1.063a9.846 9.846 0 005.313-2.218h.03l.72.781-.688.688 1.406 1.406 2.813-2.813-1.407-1.406-.687.688-.781-.72c.005-.006-.006-.024 0-.03A9.846 9.846 0 0025.937 17H27v1h2v-4h-2v1h-1.063a9.87 9.87 0 00-2.187-5.313l.75-.75.688.688 1.406-1.406-2.813-2.813-1.406 1.407.688.687-.75.75A9.87 9.87 0 0017 6.062V5h1V3h-4zm2 5c4.43 0 8 3.57 8 8s-3.57 8-8 8-8-3.57-8-8 3.57-8 8-8zm-2.5 2.156a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zM11 14.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm-7.5 4.344a1.5 1.5 0 100 3 1.5 1.5 0 000-3zm5 0a1.5 1.5 0 100 3 1.5 1.5 0 000-3z\"\n      ></path>\n    </svg>\n  );\n}\n\nexport default Icon;\n","import React from 'react';\nimport { Moon, Sun } from 'react-bootstrap-icons';\n\nimport Icon from '../utils/virusIcon';\nimport { useTheme } from '../contexts/ThemeContext';\n\nconst Header = () => {\n    const themeState = useTheme();\n\n    return (\n        <nav \n            className={`navbar navbar-expand-lg navbar-${themeState.dark ? 'dark' : 'light'} ${themeState.dark && 'bg-dark'} py-3`}\n            style={{ ...!themeState.dark && { backgroundColor: '#DCDCDC' } }}\n        >\n            <div className='d-flex justify-content-start align-items-center'>\n                <div className='mr-2'>\n                    <Icon color={themeState.dark ? 'white' : 'black'} />\n                </div>\n                <h4 className='m-0'>COVID-19 Statistic</h4>\n            </div>\n            <form className='form-inline ml-auto' title={themeState.dark ? 'Activate light mode' : 'Activate dark mode'}>\n                {\n                    themeState.dark ?\n                        <span\n                            className='cursor-pointer'\n                            onClick={() => themeState.toggle()}\n                        >\n                            <Sun size={20} />\n                        </span>\n                        :\n                        <span\n                            className='cursor-pointer'\n                            onClick={() => themeState.toggle()}\n                        >\n                            <Moon size={20} />\n                        </span>\n                }\n            </form>\n        </nav>\n    );\n};\n\nexport default Header;","import styled from '@emotion/styled';\n\nconst Wrapper = styled('div')`\n    background: ${props => props.theme.background};\n    color: ${props => props.theme.body};\n    hr {\n        border-top: ${({ themeState }) => {\n            if (themeState.dark) {\n                return '1px solid rgba(255,255,255,.1)';\n            }\n\n            return '1px solid rgba(0,0,0,.1)';\n        }}\n    };\n    transition: ${({ themeState }) => {\n        if (themeState.dark) {\n            return 'all 0.5s ease 0s';\n        }\n\n        return '0.5s';\n    }}\n`;\n\nexport default Wrapper;","import React from 'react';\n\nimport Dashboard from './scenes/Dashboard';\nimport Header from './scenes/Header';\nimport Wrapper from './scenes/Wrapper';\n\nimport { useTheme } from './contexts/ThemeContext';\n\nimport './App.css';\n\nfunction App() {\n  const themeState = useTheme();\n\n  return (\n    <Wrapper themeState={themeState}>\n      <div>\n        <Header />\n        <Dashboard />\n      </div>\n    </Wrapper>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'materialize-css/dist/css/materialize.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './contexts/ThemeContext';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}